name: Robot Framework Tests

on:
  push:
    branches: [ "main", "actions/**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch'
        required: false

jobs:
  sql_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up directories
        run: |
          mkdir tests sources
      - name: "[Database] Checkout code"
        uses: actions/checkout@v2
        with:
          path: sources
      - name: "[Database] Setup MySQL"
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql root password: root
          mysql database: user
          mysql user: root 
          mysql password: root
      - name: "[Database] Wait for MySQL"
        run: sleep 10
      - name: "[Database] Create Tables"
        run: |
          mysql --protocol=TCP -h localhost -P 3306 --user=root --password=root user < sources/create_table.sql
      - name: "[Database] Insert Sample Data"
        run: |
          mysql --protocol=TCP -h localhost -P 3306 --user=root --password=root user < sources/insert_data.sql
      - name: "[Testing] Retrieve tests"
        env:
          BRANCH_NAME: ${{ github.event.inputs.branch }}
        run: |
          if [ -z "$BRANCH_NAME" ]; then
            echo "Branch name not provided. Cloning default branch..."
            git clone https://github.com/DevOps-2023-TeamA/tsao-tests.git tests/alltests
          else
            echo "Branch name provided: $BRANCH_NAME. Cloning specific branch..."
            git clone -b $BRANCH_NAME https://github.com/DevOps-2023-TeamA/tsao-tests.git tests/alltests
          fi
          
          cp -r tests/alltests/db/* tests
        working-directory: ${{ github.workspace }}
      - name: "[Testing] Install Robot Framework and SeleniumLibrary"
        run: |
          pip install robotframework
          pip install robotframework-databaselibrary
          pip install pymysql
        working-directory: ${{ github.workspace }}

      - name: "[Testing] Run Robot Framework Tests"
        run: |
          for file in tests/*.robot; do
            if [ -f "$file" ]; then
              echo "Result of $file"
              robot -v DB_NAME:tsao -v DB_USER:root -v DB_PASSWORD:root --outputdir results/ $file
              echo "-----------------------------------"
            fi
          done
        working-directory: ${{ github.workspace }}
      - name: "[Testing] Upload Testing Artifacts"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: selenium-artifacts
          path: results/
      - name: "[Reporting] Report status to webhook"
        if: success()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/DevOps-2023-TeamA/tsao-tests/actions/workflows/84816007/dispatches \
          -d '{"ref":"main", "inputs": {"sender":"tsao-db", "resultsURL":"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "success": "true"}}'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: "[Reporting] Report status to webhook"
        if: failure()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/DevOps-2023-TeamA/tsao-tests/actions/workflows/84816007/dispatches \
          -d '{"ref":"main", "inputs": {"sender":"tsao-db", "resultsURL":"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "success": "false"}}'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
